buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.1.RELEASE")
        classpath("com.bmuschko:gradle-docker-plugin:4.0.5")
        classpath("com.avast.gradle:gradle-docker-compose-plugin:0.7.1")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'docker-compose'
apply plugin: "jacoco"


bootJar {
    baseName = 'elastic-example-springboot'
    version =  '0.0.1'
}

repositories {
    mavenCentral()
    
    jcenter()

    maven {
        url "https://artifacts.elastic.co/maven"
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-elasticsearch:2.1.1.RELEASE")
    compile("org.elasticsearch.client:x-pack-transport:6.4.2")

    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.2.0'
    testCompile("org.assertj:assertj-core:3.11.1")
    testCompile 'org.awaitility:awaitility:3.1.5'
}

import com.bmuschko.gradle.docker.tasks.image.*

task buildMyAppImage(type: DockerBuildImage) {
    inputDir = file('src/main/docker')
    tag = 'elastic-example-springboot:latest'
}

task copyLibs(type: Copy) {
    from 'build/libs'
    into 'src/main/docker'
}

buildMyAppImage.dependsOn build
buildMyAppImage.dependsOn copyLibs

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport
